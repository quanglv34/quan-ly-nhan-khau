<?php

namespace App\Filament\Resources\HoKhauResource\Pages;

use App\Filament\Resources\HoKhauResource;
use App\Models\HoKhau;
use App\Models\NhanKhau;
use Auth;
use Carbon\Carbon;
use Filament\Forms\Components\Card;
use Filament\Forms\Components\Fieldset;
use Filament\Forms\Components\Group;
use Filament\Forms\Components\Repeater;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\TextInput;
use Filament\Notifications\Notification;
use Filament\Resources\Pages\CreateRecord;
use Filament\Resources\Pages\EditRecord;
use Filament\Resources\Pages\Page;
use Illuminate\Database\Eloquent\Model;

class TachHoKhau extends CreateRecord
{
    protected static string $resource = HoKhauResource::class;
    protected static ?string $title = 'Tách hộ khẩu';

    protected static bool $canCreateAnother = false;

    public HoKhau $hoKhau;

    protected function getActions(): array
    {
        return parent::getActions(); // TODO: Change the autogenerated stub
    }

    public function mount(): void
    {
        $this->hoKhau = HoKhau::with('thanhVien.nhanKhau')->where
        ('id', '=', $this->record)->first();
        parent::mount(); // TODO: Change the autogenerated stub
    }

    protected function handleRecordCreation(array $data): Model
    {
        $hoKhau = null;
        try {
            $hoKhau = (new \App\Actions\HoKhau\TachHoKhau())->handle($data);
        } catch (\Throwable $exception) {
            Notification::make()
                ->title('Đã có lỗi xảy ra')
                ->body($exception->getMessage())
                ->danger()->send();
        }

        if($hoKhau) {
            $this->redirect(HoKhauResource::getUrl('edit', ['record' => $hoKhau]));
        }

        $this->halt();
    }

    protected function getFormSchema(): array
    {

        return [
            Card::make([
                Fieldset::make('Thông tin hộ cũ')->schema([
                    Select::make('chuHoId')
                        ->default($this->hoKhau->chuHoId)
                        ->label('Chủ hộ cũ')
                        ->disabled()
                        ->preload()
                        ->required()
                        ->label('Chủ hộ')
                        ->searchable()
                        ->relationship('chuHo', 'maNhanKhauVaHoVaTen'),
                ]),
                Fieldset::make('Thông tin hộ mới')
                    ->schema([
                        TextInput::make('maHoKhau')
                            ->required()
                            ->label('Mã hộ khẩu')->unique(ignoreRecord: true),
                        TextInput::make('maKhuVuc')
                            ->required()
                            ->label('Mã khu vực'),
                        TextInput::make('diaChi')
                            ->required()
                            ->label('Địa chỉ'),
                        TextInput::make('ngayLap')->required()
                            ->label('Ngày lập')->type('date'),
                        Select::make('chuHoId')
                            ->label('Chủ hộ')
                            ->preload()
                            ->required()
                            ->label('Chủ hộ')
                            ->searchable()
                            ->options($this->hoKhau->thanhVien->pluck('nhanKhau.maNhanKhauVaHoVaTen',
                                'nhanKhauId')),
                        Select::make('nguoiThucHienId')
                            ->required()
                            ->default(Auth::user()->id)
                            ->label('Người thực hiện')
                            ->relationship('nguoiThucHien', 'name'),
                        Repeater::make('thanhVien')
                            ->columnSpan('full')
                            ->label('Thành viên chuyển đi')
                            ->createItemButtonLabel('Thêm thành viên')
                            ->defaultItems(1)
                            ->schema([
                                TextInput::make('quanHeVoiChuHo')->required()
                                    ->label('Quan hệ với chủ hộ'),
                                Select::make('nhanKhauId')
                                    ->label('Thành viên')
                                    ->options(
                                        $this->hoKhau
                                            ->thanhVien
                                            ->pluck('nhanKhau.maNhanKhauVaHoVaTen',
                                                'nhanKhauId')
                                    )
                                    ->required(),
                            ])
                    ])->statePath('thongTinHoKhauMoi'),
            ])
        ];

    }

    protected function getRelationManagers(): array
    {
        return [];
    }
}
